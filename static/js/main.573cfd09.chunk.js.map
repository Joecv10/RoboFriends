{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","React","createElement","Fragment","className","alt","src","concat","CardList","_ref","robots","cardComponent","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","marginTop","border","height","children","ErrorBoundry","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearch","event","searchField","target","value","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"oLAeeA,MAbDC,IACZ,MAAMC,KAAEA,EAAIC,MAAEA,EAAKC,GAAEA,GAAOH,EAC5B,OACEI,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKE,UAAU,gDACbH,IAAAC,cAAA,OAAKG,IAAI,QAAQC,IAAG,wBAAAC,OAA0BP,EAAE,cAChDC,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCQGS,MAdEC,IAAgB,IAAfC,OAAEA,GAAQD,EAC1B,MAAME,EAAgBD,EAAOE,IAAI,CAACC,EAAMC,IAEpCb,IAAAC,cAACN,EAAI,CACHmB,IAAKD,EACLd,GAAIU,EAAOI,GAAGd,GACdF,KAAMY,EAAOI,GAAGhB,KAChBC,MAAOW,EAAOI,GAAGf,SAIvB,OAAOE,IAAAC,cAAAD,IAAAE,SAAA,KAAGQ,ICEGK,MAdGP,IAAsB,IAArBQ,aAAEA,GAAcR,EACjC,OACER,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,SACEE,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,IACT,IACHhB,IAAAC,cAAA,aCQSmB,MAjBCxB,GAEZI,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OACEoB,MAAO,CACLC,UAAW,SACXC,UAAW,MACXC,OAAQ,kBACRC,OAAQ,UAGT7B,EAAM8B,WCOAC,MAlBf,cAA2BC,YACzBC,YAAYjC,GACVkC,QACAC,KAAKC,MAAQ,CAAEC,UAAU,GAG3BC,kBAAkBC,EAAOC,GACvBL,KAAKM,SAAS,CAAEJ,UAAU,IAG5BK,SACE,OAAIP,KAAKC,MAAMC,SACNjC,IAAAC,cAAA,UAAI,yBAEN8B,KAAKnC,MAAM8B,iBCkCPa,MA3Cf,cAAkBvC,IAAM4B,UACtBC,cACEC,QAAQC,KAaVS,SAAYC,KACVV,KAAKM,SAAS,CAAEK,YAAaD,EAAME,OAAOC,UAb1Cb,KAAKC,MAAQ,CACXvB,OAAQ,GACRiC,YAAa,IAIjBG,oBACEC,MAAM,8CACHC,KAAMC,GAAaA,EAASC,QAC5BF,KAAMG,GAAUnB,KAAKM,SAAS,CAAE5B,OAAQyC,KAO7CZ,SACE,MAAM7B,OAAEA,EAAMiC,YAAEA,GAAgBX,KAAKC,MAC/BmB,EAAiB1C,EAAO2C,OAAQC,GAC7BA,EAAMxD,KAAKyD,cAAcC,SAASb,EAAYY,gBAGvD,OAAK7C,EAAO+C,OAIRxD,IAAAC,cAAA,OAAKE,UAAU,MACbH,IAAAC,cAAA,MAAIE,UAAU,MAAK,eACnBH,IAAAC,cAACc,EAAS,CAACC,aAAce,KAAKS,WAC9BxC,IAAAC,cAACmB,EAAM,KACLpB,IAAAC,cAAC0B,EAAY,KACX3B,IAAAC,cAACM,EAAQ,CAACE,OAAQ0C,OARnBnD,IAAAC,cAAA,UAAI,aCrBFwD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAd,KAAAa,EAAAE,KAAA,UAAqBf,KAAKvC,IAAiD,IAAhDuD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS3D,EACpEuD,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDjC,OACHtC,IAAAC,cAACD,IAAMwE,WAAU,KACfxE,IAAAC,cAACsC,EAAG,QAORkB","file":"static/js/main.573cfd09.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = (props) => {\n  const { name, email, id } = props;\n  return (\n    <>\n      <div className=\"bg-light-green dib br3 pa3 ma2 grow shadow-5\">\n        <img alt=\"Robot\" src={`https://robohash.org/${id}?200x200`}></img>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  const cardComponent = robots.map((user, i) => {\n    return (\n      <Card\n        key={i}\n        id={robots[i].id}\n        name={robots[i].name}\n        email={robots[i].email}\n      />\n    );\n  });\n  return <>{cardComponent}</>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <>\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"Search robots\"\n        onChange={searchChange}\n      />{\" \"}\n      <br />\n    </>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <>\n      <div\n        style={{\n          overflowY: \"scroll\",\n          marginTop: \"1em\",\n          border: \"1px solid black\",\n          height: \"100vh\",\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super();\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Opps. That's not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearch = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (!robots.length) {\n      return <h1>Loading</h1>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearch} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}